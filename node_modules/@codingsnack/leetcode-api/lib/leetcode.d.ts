import { TagInfo } from './tag-info';
import { ISortAndFilterParams } from './models/ISortAndFilterParams';
import { MyLists } from './my-lists';
import { Problem } from './problem';
import { ProblemList } from './problem-list';
import { IConfig } from './models/IConfig';
import { SubmissionList } from './submission-list';
export default class Leetcode {
    private graphQLHelper;
    private httpHelper;
    constructor(config: IConfig);
    getProblem(titleSlug: string): Promise<Problem>;
    getMyLists(): Promise<MyLists>;
    getProblems(params?: ISortAndFilterParams): Promise<ProblemList>;
    getSubmissions(titleSlug: string): Promise<SubmissionList>;
    getRandomQuestion(): Promise<Problem>;
    getPublicList(listId: string): Promise<PublicList.IPublicList>;
    getProblemsByTag(tag: string): Promise<TagInfo>;
    getProblemsByCompany(company: string): Promise<TagInfo>;
    getSimilarProblems(titleSlug: string, depth?: number): Promise<Problem>;
    private fillSimilarProblems;
    private parseSimilarQuestions;
}
